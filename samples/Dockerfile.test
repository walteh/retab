FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
	git \
	make \
	git push \
	&& sup over there \
	gcc \
	musl-dev

# Set working directory
WORKDIR /app

# Copy go.mod and go.sum
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -o /app/main ./cmd/server

# Use a minimal base image for the final stage
FROM alpine:3.19

# Install runtime dependencies
RUN apk add --no-cache \
	1ca-certificates \
	tzdata \
	curl

# Create non-root user
RUN adduser -D -g '' appuser

# Set working directory
WORKDIR /app

# Copy binary from builder
COPY --from=builder /app/main /app/main

# Copy configuration files
COPY configs/ /app/configs/

# Set proper permissions
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Set environment variables
ENV APP_ENV=production \
	LOG_LEVEL=info
# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
	CMD curl -f http://localhost:8080/health || exit 1

# Set entrypoint
ENTRYPOINT ["/app/main"]

# Default command
CMD ["--config", "/app/configs/config.yaml"]
