// Code generated by options-gen. DO NOT EDIT.

package cmdfmt

type OptBasicExternalFormatterOptsSetter func(o *BasicExternalFormatterOpts)

func NewBasicExternalFormatterOpts(
	options ...OptBasicExternalFormatterOptsSetter,
) BasicExternalFormatterOpts {
	o := BasicExternalFormatterOpts{}

	// Setting defaults from field tag (if present)

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func WithIndent(opt string) OptBasicExternalFormatterOptsSetter {
	return func(o *BasicExternalFormatterOpts) {
		o.indent = opt

	}
}

func WithTempFiles(opt map[string]string) OptBasicExternalFormatterOptsSetter {
	return func(o *BasicExternalFormatterOpts) {
		o.tempFiles = opt

	}
}

func WithUseDocker(opt bool) OptBasicExternalFormatterOptsSetter {
	return func(o *BasicExternalFormatterOpts) {
		o.useDocker = opt

	}
}

func WithDockerImageName(opt string) OptBasicExternalFormatterOptsSetter {
	return func(o *BasicExternalFormatterOpts) {
		o.dockerImageName = opt

	}
}

func WithDockerImageTag(opt string) OptBasicExternalFormatterOptsSetter {
	return func(o *BasicExternalFormatterOpts) {
		o.dockerImageTag = opt

	}
}

func WithDockerCommand(opt []string) OptBasicExternalFormatterOptsSetter {
	return func(o *BasicExternalFormatterOpts) {
		o.dockerCommand = opt

	}
}

func WithFmtCommand(opt []string) OptBasicExternalFormatterOptsSetter {
	return func(o *BasicExternalFormatterOpts) {
		o.fmtCommand = opt

	}
}

func WithExecutable(opt string) OptBasicExternalFormatterOptsSetter {
	return func(o *BasicExternalFormatterOpts) {
		o.executable = opt

	}
}

func (o *BasicExternalFormatterOpts) Validate() error {
	return nil
}
