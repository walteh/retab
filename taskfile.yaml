# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: 3
vars:
    GO_MODULES:
        sh: awk '/^[[:space:]]*[^)]/ && NR>3 {gsub(/^[[:space:]]+/,""); print}' go.work
    GO_ROOT_PKG:
        sh: cat go.mod | grep -oE '^module[^\S]+' | cut -d' ' -f2
    GO_COMMAND: go
    TINYGO_COMMAND: tinygo
    WASM_OUT_DIRS:
      - editors/vscode/out

env:
    GOPROXY: https://proxy.golang.org
    GOSUMDB: sum.golang.org
    GOPRIVATE: github.com/walteh

tasks:
    go-mod-tidy:
        cmds:
          - for: {var: GO_MODULES}
            cmd: |-
                cd {{.ITEM}} && "{{.GO_COMMAND}}" mod tidy -e

    go-mod-upgrade:
        run: once
        cmds:
          - cmd: |-
                {{.GO_COMMAND}} tool go-mod-upgrade --force

    test:
        cmd: |-
            {{.GO_COMMAND}} test ./...

    build:wasm:
        requires:
            vars:
              - GO_COMMAND
              - GO_WASM_EXEC
        vars:
            GO_COMMAND: "{{.GO_COMMAND}}"
            GO_WASM_EXEC:
                sh: echo "$(go env GOROOT)/lib/wasm/wasm_exec.js"
            TMP_DIR:
                sh: mktemp -d
        cmds:
          - cmd: |-
                cp {{.GO_WASM_EXEC}} {{.TMP_DIR}}/
          - cmd: |-
                CGO_ENABLED=0 GOOS=js GOARCH=wasm "{{.GO_COMMAND}}" build -ldflags="-s -w"  -trimpath -o {{.TMP_DIR}}/retab.wasm ./cmd/retab
          - cmd: |-
                bun install
          - for: {var: WASM_OUT_DIRS}
            cmd: |-
                mkdir -p {{.ITEM}} && cp {{.TMP_DIR}}/* {{.ITEM}}
          - cmd: |-
                rm -rf {{.TMP_DIR}}

    build:wasm:tinygo:
        cmds:
          - task: build:wasm
            vars:
                GO_COMMAND: "{{.TINYGO_COMMAND}}"
                GO_WASM_EXEC:
                    sh: "$(tinygo env TINYGOROOT)/targets/wasm_exec.js"

    vscode:package:
        dir: editors/vscode
        cmds:
          - task: build:wasm
          - cmd: |-
                bun run package
          - cmd: |-
                mv ./retab-*.vsix ~/Downloads
          - cmd: |-
                open https://marketplace.visualstudio.com/manage/publishers/walteh

    vscode:rebuild:
        dir: editors/vscode
        cmds:
          - task: build:wasm
          - cmd: |-
                bun run build

    mockery:
        desc: generates mocks for interfaces with '//go:mock' comment
        vars:
            TMP_DIR: ./gen/config
            MOCKERY_INTERFACE_DATA:
                sh: |-
                    grep -rl "//go:mock" --include="*.go" . \
                       | xargs -I{} bash -c 'd=$(dirname {}); d=${d#./}; awk -v d="$d {}" '\''/\/\/go:mock/ {getline; if($1=="type") print d, $2}'\'' {}'
            MOCKERY_SOURCE_FILES:
                sh: |-
                    grep -rl "//go:mock" --include="*.go" .
        sources:
          - '{{.MOCKERY_SOURCE_FILES | join ","}}'
          - .mockery.yaml
        generates:
          - ./gen/mocks/**/*_mock.gen.go
          - ./gen/config/.mockery.yaml
        cmds:
          - cmd: |-
                mkdir -p {{.TMP_DIR}}
          - cmd: |-
                cp .mockery.yaml {{.TMP_DIR}}/.mockery.yaml
          - for: {var: "MOCKERY_INTERFACE_DATA", split: "\n", as: ITEM}
            cmd: |-
                yq -i ".packages.\"{{ .GO_ROOT_PKG }}/{{ splitList " " .ITEM | first }}\".interfaces.{{ splitList " " .ITEM | last }} = {}" {{.TMP_DIR}}/.mockery.yaml
          - cmd: |-
                {{.GO_COMMAND}} tool github.com/vektra/mockery/v2 --config={{.TMP_DIR}}/.mockery.yaml
